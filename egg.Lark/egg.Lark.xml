<?xml version="1.0"?>
<doc>
    <assembly>
        <name>egg.Lark</name>
    </assembly>
    <members>
        <member name="T:egg.Lark.Json.Parser">
            <summary>
            Json解析器
            </summary>
        </member>
        <member name="F:egg.Lark.Json.Parser.EnforceUnicode">
            <summary>
            是否强制使用Unicode进行非Ascii字符编码
            </summary>
        </member>
        <member name="M:egg.Lark.Json.Parser.Parse(System.String,System.Type)">
            <summary>
            从字符串中直接解析对象
            </summary>
            <param name="json"></param>
            <param name="tp"></param>
            <returns></returns>
        </member>
        <member name="M:egg.Lark.Json.Parser.ParseJson(System.String,egg.Lark.MemeryUnits.Unit)">
            <summary>
            获取对象
            </summary>
            <param name="json"></param>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:egg.Lark.Json.Parser.GetJson(egg.Lark.MemeryUnits.Unit)">
            <summary>
            获取字符串
            </summary>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="T:egg.Lark.Memery">
            <summary>
            记忆存储器
            </summary>
        </member>
        <member name="P:egg.Lark.Memery.Function">
            <summary>
            获取关联函数
            </summary>
        </member>
        <member name="M:egg.Lark.Memery.#ctor(egg.Lark.MemeryUnits.Function)">
            <summary>
            实例化对象
            </summary>
            <param name="fn"></param>
        </member>
        <member name="P:egg.Lark.Memery.Item(System.Int32)">
            <summary>
             获取或设置单元
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:egg.Lark.Memery.Clear">
            <summary>
            清空存储
            </summary>
        </member>
        <member name="M:egg.Lark.Memery.AddNumber(System.Double)">
            <summary>
            添加一个数值
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:egg.Lark.Memery.AddString(System.String)">
            <summary>
            添加一个字符串
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:egg.Lark.Memery.AddList">
            <summary>
            添加一个列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:egg.Lark.Memery.AddObject">
            <summary>
            添加一个对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:egg.Lark.Memery.AddFunction(egg.Lark.MemeryUnits.Function)">
            <summary>
            添加一个对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:egg.Lark.Memery.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="T:egg.Lark.MemeryUnits.Boolean">
            <summary>
            数值对象
            </summary>
        </member>
        <member name="P:egg.Lark.MemeryUnits.Boolean.Value">
            <summary>
            获取值
            </summary>
        </member>
        <member name="M:egg.Lark.MemeryUnits.Boolean.#ctor(System.Boolean)">
            <summary>
            实例化对象
            </summary>
            <param name="val"></param>
        </member>
        <member name="M:egg.Lark.MemeryUnits.Boolean.Create(System.Boolean)">
            <summary>
            实例化对象
            </summary>
            <returns></returns>
        </member>
        <member name="P:egg.Lark.MemeryUnits.Boolean.True">
            <summary>
            新建一个为真的对象
            </summary>
        </member>
        <member name="P:egg.Lark.MemeryUnits.Boolean.False">
            <summary>
            新建一个为假的对象
            </summary>
        </member>
        <member name="M:egg.Lark.MemeryUnits.Boolean.OnGetBoolean">
            <summary>
            获取布尔值
            </summary>
            <returns></returns>
        </member>
        <member name="M:egg.Lark.MemeryUnits.Boolean.OnGetNumber">
            <summary>
            获取数值
            </summary>
            <returns></returns>
        </member>
        <member name="M:egg.Lark.MemeryUnits.Boolean.OnGetString">
            <summary>
            获取字符串
            </summary>
            <returns></returns>
        </member>
        <member name="T:egg.Lark.MemeryUnits.Function">
            <summary>
            数值对象
            </summary>
        </member>
        <member name="P:egg.Lark.MemeryUnits.Function.Name">
            <summary>
            获取值
            </summary>
        </member>
        <member name="P:egg.Lark.MemeryUnits.Function.Params">
            <summary>
            获取值
            </summary>
        </member>
        <member name="P:egg.Lark.MemeryUnits.Function.Engine">
            <summary>
            获取关联引擎
            </summary>
        </member>
        <member name="P:egg.Lark.MemeryUnits.Function.Memery">
            <summary>
            获取值
            </summary>
        </member>
        <member name="P:egg.Lark.MemeryUnits.Function.ParentFunction">
            <summary>
            单元类型
            </summary>
        </member>
        <member name="M:egg.Lark.MemeryUnits.Function.#ctor(egg.Lark.ScriptEngine,egg.Lark.MemeryUnits.Function,System.String,egg.Lark.Params)">
            <summary>
            实例化对象
            </summary>
            <param name="engine"></param>
            <param name="name"></param>
            <param name="args"></param>
            <param name="parent"></param>
        </member>
        <member name="M:egg.Lark.MemeryUnits.Function.OnDispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:egg.Lark.MemeryUnits.Function.Execute(egg.KeyValues{egg.Lark.MemeryUnits.Unit})">
            <summary>
            执行函数
            </summary>
        </member>
        <member name="T:egg.Lark.MemeryUnits.List">
            <summary>
            列表
            </summary>
        </member>
        <member name="M:egg.Lark.MemeryUnits.List.#ctor">
            <summary>
            实例化对象
            </summary>
        </member>
        <member name="M:egg.Lark.MemeryUnits.List.Create">
            <summary>
            实例化对象
            </summary>
            <returns></returns>
        </member>
        <member name="P:egg.Lark.MemeryUnits.List.Count">
            <summary>
            获取列表数量
            </summary>
        </member>
        <member name="P:egg.Lark.MemeryUnits.List.Item(System.Int32)">
            <summary>
            获取或设置存储单元
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:egg.Lark.MemeryUnits.List.Obj(System.Int32)">
            <summary>
            获取子对象
            </summary>
            <param name="idx"></param>
            <returns></returns>
        </member>
        <member name="M:egg.Lark.MemeryUnits.List.Obj(System.Int32,egg.Lark.MemeryUnits.Object)">
            <summary>
            设置子对象
            </summary>
            <param name="idx"></param>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:egg.Lark.MemeryUnits.List.Array(System.Int32)">
            <summary>
            获取数组子对象
            </summary>
            <param name="idx"></param>
            <returns></returns>
        </member>
        <member name="M:egg.Lark.MemeryUnits.List.Array(System.Int32,egg.Lark.MemeryUnits.List)">
            <summary>
            设置数组子对象
            </summary>
            <param name="idx"></param>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:egg.Lark.MemeryUnits.List.Num(System.Int32)">
            <summary>
            获取数值子元素
            </summary>
            <param name="idx"></param>
            <returns></returns>
        </member>
        <member name="M:egg.Lark.MemeryUnits.List.Num(System.Int32,egg.Lark.MemeryUnits.Number)">
            <summary>
            设置数值子元素
            </summary>
            <param name="idx"></param>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:egg.Lark.MemeryUnits.List.Str(System.Int32)">
            <summary>
            获取数值子元素
            </summary>
            <param name="idx"></param>
            <returns></returns>
        </member>
        <member name="M:egg.Lark.MemeryUnits.List.Str(System.Int32,egg.Lark.MemeryUnits.String)">
            <summary>
            设置数值子元素
            </summary>
            <param name="idx"></param>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:egg.Lark.MemeryUnits.List.Bool(System.Int32)">
            <summary>
            获取数值子元素
            </summary>
            <param name="idx"></param>
            <returns></returns>
        </member>
        <member name="M:egg.Lark.MemeryUnits.List.Bool(System.Int32,egg.Lark.MemeryUnits.Boolean)">
            <summary>
            设置数值子元素
            </summary>
            <param name="key"></param>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:egg.Lark.MemeryUnits.List.Add(egg.Lark.MemeryUnits.Unit)">
            <summary>
            添加元素
            </summary>
            <param name="unit"></param>
        </member>
        <member name="M:egg.Lark.MemeryUnits.List.Clear">
            <summary>
            清空元素
            </summary>
        </member>
        <member name="M:egg.Lark.MemeryUnits.List.OnDispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="T:egg.Lark.MemeryUnits.NativeFunction">
            <summary>
            数值对象
            </summary>
        </member>
        <member name="P:egg.Lark.MemeryUnits.NativeFunction.Function">
            <summary>
            获取值
            </summary>
        </member>
        <member name="P:egg.Lark.MemeryUnits.NativeFunction.Keys">
            <summary>
            获取关键字
            </summary>
        </member>
        <member name="M:egg.Lark.MemeryUnits.NativeFunction.#ctor(egg.Lark.ScriptEngine.Function,egg.Strings)">
            <summary>
            实例化对象
            </summary>
            <param name="fn"></param>
            <param name="keys"></param>
        </member>
        <member name="M:egg.Lark.MemeryUnits.NativeFunction.Execute(egg.KeyValues{egg.Lark.MemeryUnits.Unit})">
            <summary>
            执行函数
            </summary>
        </member>
        <member name="T:egg.Lark.MemeryUnits.NativeObject">
            <summary>
            数值对象
            </summary>
        </member>
        <member name="P:egg.Lark.MemeryUnits.NativeObject.Object">
            <summary>
            获取值
            </summary>
        </member>
        <member name="P:egg.Lark.MemeryUnits.NativeObject.Keys">
            <summary>
            获取关键字
            </summary>
        </member>
        <member name="M:egg.Lark.MemeryUnits.NativeObject.#ctor(System.Object)">
            <summary>
            实例化对象
            </summary>
            <param name="obj"></param>
        </member>
        <member name="T:egg.Lark.MemeryUnits.None">
            <summary>
            空对象
            </summary>
        </member>
        <member name="M:egg.Lark.MemeryUnits.None.#ctor">
            <summary>
            实例化对象
            </summary>
        </member>
        <member name="M:egg.Lark.MemeryUnits.None.Create">
            <summary>
            创建一个新的空对象
            </summary>
            <returns></returns>
        </member>
        <member name="T:egg.Lark.MemeryUnits.Number">
            <summary>
            数值对象
            </summary>
        </member>
        <member name="P:egg.Lark.MemeryUnits.Number.Value">
            <summary>
            获取值
            </summary>
        </member>
        <member name="M:egg.Lark.MemeryUnits.Number.#ctor(System.Double)">
            <summary>
            实例化对象
            </summary>
            <param name="val"></param>
        </member>
        <member name="M:egg.Lark.MemeryUnits.Number.Create(System.Double)">
            <summary>
            创建一个新的空对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:egg.Lark.MemeryUnits.Number.OnGetBoolean">
            <summary>
            获取布尔值
            </summary>
            <returns></returns>
        </member>
        <member name="M:egg.Lark.MemeryUnits.Number.OnGetNumber">
            <summary>
            获取数值
            </summary>
            <returns></returns>
        </member>
        <member name="M:egg.Lark.MemeryUnits.Number.OnGetString">
            <summary>
            获取字符串
            </summary>
            <returns></returns>
        </member>
        <member name="T:egg.Lark.MemeryUnits.Object">
            <summary>
            列表
            </summary>
        </member>
        <member name="M:egg.Lark.MemeryUnits.Object.#ctor">
            <summary>
            实例化对象
            </summary>
        </member>
        <member name="M:egg.Lark.MemeryUnits.Object.Create">
            <summary>
            实例化对象
            </summary>
            <returns></returns>
        </member>
        <member name="P:egg.Lark.MemeryUnits.Object.Keys">
            <summary>
            获取键名称集合
            </summary>
        </member>
        <member name="M:egg.Lark.MemeryUnits.Object.ContainsKey(System.String)">
            <summary>
            获取是否包含键名称
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="P:egg.Lark.MemeryUnits.Object.Item(System.String)">
            <summary>
            获取或设置存储单元
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:egg.Lark.MemeryUnits.Object.Obj(System.String)">
            <summary>
            获取子对象
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:egg.Lark.MemeryUnits.Object.Obj(System.String,egg.Lark.MemeryUnits.Object)">
            <summary>
            设置子对象
            </summary>
            <param name="key"></param>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:egg.Lark.MemeryUnits.Object.Array(System.String)">
            <summary>
            获取数组子对象
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:egg.Lark.MemeryUnits.Object.Array(System.String,egg.Lark.MemeryUnits.List)">
            <summary>
            设置数组子对象
            </summary>
            <param name="key"></param>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:egg.Lark.MemeryUnits.Object.Num(System.String)">
            <summary>
            获取数值子元素
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:egg.Lark.MemeryUnits.Object.Num(System.String,egg.Lark.MemeryUnits.Number)">
            <summary>
            设置数值子元素
            </summary>
            <param name="key"></param>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:egg.Lark.MemeryUnits.Object.Num(System.String,System.Double)">
            <summary>
            设置数值子元素
            </summary>
            <param name="key"></param>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:egg.Lark.MemeryUnits.Object.Str(System.String)">
            <summary>
            获取数值子元素
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:egg.Lark.MemeryUnits.Object.Str(System.String,egg.Lark.MemeryUnits.String)">
            <summary>
            设置数值子元素
            </summary>
            <param name="key"></param>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:egg.Lark.MemeryUnits.Object.Str(System.String,System.String)">
            <summary>
            设置数值子元素
            </summary>
            <param name="key"></param>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:egg.Lark.MemeryUnits.Object.Bool(System.String)">
            <summary>
            获取数值子元素
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:egg.Lark.MemeryUnits.Object.Bool(System.String,egg.Lark.MemeryUnits.Boolean)">
            <summary>
            设置数值子元素
            </summary>
            <param name="key"></param>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:egg.Lark.MemeryUnits.Object.Bool(System.String,System.Boolean)">
            <summary>
            设置数值子元素
            </summary>
            <param name="key"></param>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:egg.Lark.MemeryUnits.Object.Clear">
            <summary>
            清空元素
            </summary>
        </member>
        <member name="M:egg.Lark.MemeryUnits.Object.OnDispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="T:egg.Lark.MemeryUnits.String">
            <summary>
            数值对象
            </summary>
        </member>
        <member name="P:egg.Lark.MemeryUnits.String.Value">
            <summary>
            获取值
            </summary>
        </member>
        <member name="M:egg.Lark.MemeryUnits.String.#ctor(System.String)">
            <summary>
            实例化对象
            </summary>
            <param name="val"></param>
        </member>
        <member name="M:egg.Lark.MemeryUnits.String.Create(System.String)">
            <summary>
            实例化对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:egg.Lark.MemeryUnits.String.OnGetBoolean">
            <summary>
            获取布尔值
            </summary>
            <returns></returns>
        </member>
        <member name="M:egg.Lark.MemeryUnits.String.OnGetNumber">
            <summary>
            获取数值
            </summary>
            <returns></returns>
        </member>
        <member name="M:egg.Lark.MemeryUnits.String.OnGetString">
            <summary>
            获取字符串
            </summary>
            <returns></returns>
        </member>
        <member name="T:egg.Lark.MemeryUnits.UnitTypes">
            <summary>
            存储类型
            </summary>
        </member>
        <member name="F:egg.Lark.MemeryUnits.UnitTypes.None">
            <summary>
            空值
            </summary>
        </member>
        <member name="F:egg.Lark.MemeryUnits.UnitTypes.Boolean">
            <summary>
            布尔
            </summary>
        </member>
        <member name="F:egg.Lark.MemeryUnits.UnitTypes.Number">
            <summary>
            数值
            </summary>
        </member>
        <member name="F:egg.Lark.MemeryUnits.UnitTypes.String">
            <summary>
            字符串
            </summary>
        </member>
        <member name="F:egg.Lark.MemeryUnits.UnitTypes.List">
            <summary>
            列表
            </summary>
        </member>
        <member name="F:egg.Lark.MemeryUnits.UnitTypes.Object">
            <summary>
            对象
            </summary>
        </member>
        <member name="F:egg.Lark.MemeryUnits.UnitTypes.Function">
            <summary>
            函数
            </summary>
        </member>
        <member name="F:egg.Lark.MemeryUnits.UnitTypes.NativeObject">
            <summary>
            原生函数
            </summary>
        </member>
        <member name="F:egg.Lark.MemeryUnits.UnitTypes.NativeFunction">
            <summary>
            原生函数
            </summary>
        </member>
        <member name="T:egg.Lark.MemeryUnits.Unit">
            <summary>
            处理单元
            </summary>
        </member>
        <member name="P:egg.Lark.MemeryUnits.Unit.UnitType">
            <summary>
            单元类型
            </summary>
        </member>
        <member name="P:egg.Lark.MemeryUnits.Unit.Parent">
            <summary>
            单元类型
            </summary>
        </member>
        <member name="M:egg.Lark.MemeryUnits.Unit.#ctor(egg.Lark.MemeryUnits.UnitTypes)">
            <summary>
            实例化对象
            </summary>
            <param name="unitType"></param>
        </member>
        <member name="M:egg.Lark.MemeryUnits.Unit.OnGetBoolean">
            <summary>
            获取布尔值
            </summary>
            <returns></returns>
        </member>
        <member name="M:egg.Lark.MemeryUnits.Unit.ToBoolean">
            <summary>
            获取布尔值
            </summary>
            <returns></returns>
        </member>
        <member name="M:egg.Lark.MemeryUnits.Unit.OnGetNumber">
            <summary>
            获取数值
            </summary>
            <returns></returns>
        </member>
        <member name="M:egg.Lark.MemeryUnits.Unit.ToNumber">
            <summary>
            获取数值
            </summary>
            <returns></returns>
        </member>
        <member name="M:egg.Lark.MemeryUnits.Unit.OnGetString">
            <summary>
            获取字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:egg.Lark.MemeryUnits.Unit.ToString">
            <summary>
            获取字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:egg.Lark.MemeryUnits.Unit.OnDispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="M:egg.Lark.MemeryUnits.Unit.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="T:egg.Lark.Params">
            <summary>
            参数集合
            </summary>
        </member>
        <member name="P:egg.Lark.Params.Function">
            <summary>
            获取关联函数
            </summary>
        </member>
        <member name="M:egg.Lark.Params.#ctor">
            <summary>
            实例化对象
            </summary>
        </member>
        <member name="M:egg.Lark.Params.AddFunction(System.String,egg.Lark.Params)">
            <summary>
            添加函数
            </summary>
            <returns></returns>
        </member>
        <member name="M:egg.Lark.Params.AddDefine(System.String)">
            <summary>
            添加定义
            </summary>
            <returns></returns>
        </member>
        <member name="M:egg.Lark.Params.AddNumber(System.Double)">
            <summary>
            添加数值
            </summary>
            <returns></returns>
        </member>
        <member name="M:egg.Lark.Params.AddString(System.String)">
            <summary>
            添加字符串
            </summary>
            <returns></returns>
        </member>
        <member name="T:egg.Lark.Parser">
            <summary>
            解析器
            </summary>
        </member>
        <member name="M:egg.Lark.Parser.Parse(egg.Lark.ScriptEngine,System.String)">
            <summary>
            执行解析
            </summary>
            <param name="engine"></param>
            <param name="script"></param>
        </member>
        <member name="T:egg.Lark.ProcessUnits.Define">
            <summary>
            数值对象
            </summary>
        </member>
        <member name="P:egg.Lark.ProcessUnits.Define.Function">
            <summary>
            获取关联的存储器
            </summary>
        </member>
        <member name="P:egg.Lark.ProcessUnits.Define.Name">
            <summary>
            获取值
            </summary>
        </member>
        <member name="M:egg.Lark.ProcessUnits.Define.#ctor(egg.Lark.MemeryUnits.Function,System.String)">
            <summary>
            实例化对象
            </summary>
            <param name="fn"></param>
            <param name="name"></param>
        </member>
        <member name="M:egg.Lark.ProcessUnits.Define.OnGetMemeryUnit">
            <summary>
            获取存储单元
            </summary>
            <returns></returns>
        </member>
        <member name="T:egg.Lark.ProcessUnits.None">
            <summary>
            空对象
            </summary>
        </member>
        <member name="M:egg.Lark.ProcessUnits.None.#ctor">
            <summary>
            实例化对象
            </summary>
        </member>
        <member name="T:egg.Lark.ProcessUnits.Pointer">
            <summary>
            存储指针
            </summary>
        </member>
        <member name="P:egg.Lark.ProcessUnits.Pointer.Function">
            <summary>
            获取关联的存储器
            </summary>
        </member>
        <member name="P:egg.Lark.ProcessUnits.Pointer.IntPtr">
            <summary>
            获取索引
            </summary>
        </member>
        <member name="M:egg.Lark.ProcessUnits.Pointer.#ctor(egg.Lark.MemeryUnits.Function,System.Int32)">
            <summary>
            实例化对象
            </summary>
        </member>
        <member name="P:egg.Lark.ProcessUnits.Pointer.None">
            <summary>
            获取一个空指针
            </summary>
        </member>
        <member name="M:egg.Lark.ProcessUnits.Pointer.OnGetMemeryUnit">
            <summary>
            获取存储单元
            </summary>
            <returns></returns>
        </member>
        <member name="T:egg.Lark.ProcessUnits.UnitTypes">
            <summary>
            单元类型
            </summary>
        </member>
        <member name="F:egg.Lark.ProcessUnits.UnitTypes.None">
            <summary>
            空值
            </summary>
        </member>
        <member name="F:egg.Lark.ProcessUnits.UnitTypes.Pointer">
            <summary>
            指针
            </summary>
        </member>
        <member name="F:egg.Lark.ProcessUnits.UnitTypes.Define">
            <summary>
            定义
            </summary>
        </member>
        <member name="F:egg.Lark.ProcessUnits.UnitTypes.Function">
            <summary>
            代码
            </summary>
        </member>
        <member name="T:egg.Lark.ProcessUnits.Unit">
            <summary>
            处理单元
            </summary>
        </member>
        <member name="P:egg.Lark.ProcessUnits.Unit.UnitType">
            <summary>
            单元类型
            </summary>
        </member>
        <member name="M:egg.Lark.ProcessUnits.Unit.#ctor(egg.Lark.ProcessUnits.UnitTypes)">
            <summary>
            实例化对象
            </summary>
            <param name="unitType"></param>
        </member>
        <member name="M:egg.Lark.ProcessUnits.Unit.OnGetMemeryUnit">
            <summary>
            获取存储单元
            </summary>
            <returns></returns>
        </member>
        <member name="M:egg.Lark.ProcessUnits.Unit.GetMemeryUnit">
            <summary>
            获取存储单元
            </summary>
            <returns></returns>
        </member>
        <member name="T:egg.Lark.ScriptEngine">
            <summary>
            百灵鸟脚本引擎
            </summary>
        </member>
        <member name="M:egg.Lark.ScriptEngine.IsFunction(egg.Lark.MemeryUnits.Unit)">
            <summary>
            获取是否为可执行函数
            </summary>
            <param name="unit"></param>
            <returns></returns>
        </member>
        <member name="M:egg.Lark.ScriptEngine.ExecuteFunction(egg.Lark.MemeryUnits.Function,egg.Lark.MemeryUnits.Unit)">
            <summary>
            执行函数并返回结果
            </summary>
            <param name="parent"></param>
            <param name="fn"></param>
            <returns></returns>
        </member>
        <member name="T:egg.Lark.ScriptEngine.Function">
            <summary>
            函数定义接口
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:egg.Lark.ScriptEngine.#ctor(System.Boolean)">
            <summary>
            实例化对象
            </summary>
        </member>
        <member name="M:egg.Lark.ScriptEngine.AddFunction(System.String,egg.Lark.Params)">
            <summary>
            添加函数
            </summary>
            <param name="name"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:egg.Lark.ScriptEngine.SetVariable(System.String,egg.Lark.MemeryUnits.Unit)">
            <summary>
            设置初始化变量
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:egg.Lark.ScriptEngine.SetProcessVariable(System.String,egg.Lark.MemeryUnits.Unit)">
            <summary>
            设置初始化变量
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:egg.Lark.ScriptEngine.GetProcessVariable(System.String)">
            <summary>
            获取变量值
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:egg.Lark.ScriptEngine.CheckProcessVariable(System.String)">
            <summary>
            检测变量值
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:egg.Lark.ScriptEngine.RegFunction(System.String,egg.Lark.ScriptEngine.Function,egg.Strings)">
            <summary>
            注册函数
            </summary>
            <param name="name"></param>
            <param name="keys"></param>
            <param name="fun"></param>
        </member>
        <member name="M:egg.Lark.ScriptEngine.AddPath(System.String)">
            <summary>
            添加路径
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:egg.Lark.ScriptEngine.AddPath(System.String[])">
            <summary>
            添加路径集合
            </summary>
            <param name="pathes"></param>
        </member>
        <member name="M:egg.Lark.ScriptEngine.Execute">
            <summary>
            执行代码
            </summary>
        </member>
        <member name="M:egg.Lark.ScriptEngine.Execute(System.String)">
            <summary>
            执行代码
            </summary>
        </member>
        <member name="M:egg.Lark.ScriptEngine.ExecuteFile(System.String)">
            <summary>
            执行文件
            </summary>
        </member>
        <member name="M:egg.Lark.ScriptEngine.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
    </members>
</doc>
